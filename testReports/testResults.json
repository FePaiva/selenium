{
  "stats": {
    "suites": 4,
    "tests": 7,
    "passes": 5,
    "pending": 0,
    "failures": 2,
    "start": "2023-01-25T23:24:43.848Z",
    "end": "2023-01-25T23:24:51.278Z",
    "duration": 7430,
    "testsRegistered": 7,
    "passPercent": 71.42857142857143,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e6f8f4aa-d4c3-4166-b214-12a401157876",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "23856a4c-2e0e-4fa6-92ad-df4183e6b597",
          "title": "add todo tests",
          "fullFile": "/Users/felippepaiva/Documents/selenium/test/secondTest.js",
          "file": "/test/secondTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "add a todo to the application",
              "fullTitle": "add todo tests add a todo to the application",
              "timedOut": null,
              "duration": 4787,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// launch the browser\nlet driver = await new Builder().forBrowser(\"chrome\").build();\n// navigate to app\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n// add todo to the list\nawait driver\n  .findElement(By.id(\"sampletodotext\"))\n  .sendKeys(\"Learn Selenium\", Key.RETURN);\n// assert\n// xpath -> finding the list of \"li\", and retrieve the last one as \"Learn Selenium\" was added last.\nlet todoText = await driver\n  .findElement(By.xpath(\"//li[last()]\"))\n  .getText()\n  .then(function (value) {\n    return value;\n  });\n// assert using chai should\ntodoText.should.equal(\"Learn Selenium\");\n// close the borwser\nawait driver.quit();",
              "err": {},
              "uuid": "856d6bf8-d510-4545-980c-19ed816e8bbf",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "856d6bf8-d510-4545-980c-19ed816e8bbf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4787,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "55139af5-d6de-4230-aa90-f50dfdb00fd0",
          "title": "GitHub Sign In",
          "fullFile": "/Users/felippepaiva/Documents/selenium/test/githubTest.js",
          "file": "/test/githubTest.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"GitHub Sign In\"",
              "fullTitle": "GitHub Sign In \"before all\" hook in \"GitHub Sign In\"",
              "timedOut": null,
              "duration": 6077,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();\nawait driver.get('https://github.com/');",
              "err": {},
              "uuid": "b5ce9541-50ef-4f58-8644-8d64ab2ecde1",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should allow user to go to sign in page",
              "fullTitle": "GitHub Sign In should allow user to go to sign in page",
              "timedOut": null,
              "duration": 159,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.findElement(By.partialLinkText('Sign in')).click();\nconsole.log(await driver.getTitle());\nif ((await driver.getTitle()) === 'Sign in to GitHub Â· GitHub') {\n  console.log('We got the title right.');\n} else {\n  console.log('The test failed.');\n  return;\n}",
              "err": {},
              "uuid": "8e227e26-c8fa-4380-8731-6d3dee210d3d",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not allow user to sign in with invalid credentials",
              "fullTitle": "GitHub Sign In should not allow user to sign in with invalid credentials",
              "timedOut": null,
              "duration": 14,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// await driver.findElement(By.name('login')).sendKeys('FeTeste');\nawait driver.findElement(By.name('login')).sendKeys('FeTest');\nawait driver\n  .findElement(By.id('password'))\n  .sendKeys('Yasmim2901', Key.RETURN);\nawait driver.wait(until.urlIs('https://github.com/session'), 5000);\nconst alertMessage = await driver.findElement(\n  By.className('js-flash-alert')\n);\nassert.ok(alertMessage.isDisplayed());",
              "err": {
                "message": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"*[name=\"login\"]\"}\n  (Session info: chrome=109.0.5414.87)",
                "estack": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"*[name=\"login\"]\"}\n  (Session info: chrome=109.0.5414.87)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:524:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:587:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:515:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Driver.execute (node_modules/selenium-webdriver/lib/webdriver.js:741:17)\n    at async toWireValue (node_modules/selenium-webdriver/lib/webdriver.js:143:15)\n    at async /Users/felippepaiva/Documents/selenium/node_modules/selenium-webdriver/lib/webdriver.js:193:16\n    at async forEachKey (node_modules/selenium-webdriver/lib/webdriver.js:187:9)\n    at async convertKeys (node_modules/selenium-webdriver/lib/webdriver.js:192:3)\n    at async Driver.execute (node_modules/selenium-webdriver/lib/webdriver.js:739:22)",
                "diff": null
              },
              "uuid": "606ba87c-d73d-4d83-a500-643c7fe808c0",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should allow user to sign in with valid credentials",
              "fullTitle": "GitHub Sign In should allow user to sign in with valid credentials",
              "timedOut": null,
              "duration": 9,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// await driver.findElement(By.name('login')).sendKeys('FeTeste');\nawait driver.findElement(By.name('login')).sendKeys('FeTeste');\nawait driver\n  .findElement(By.id('password'))\n  .sendKeys('Yasmim2901@', Key.RETURN);\nawait driver.wait(until.urlIs('https://github.com/'), 5000);\nconst importRepoBtn = await driver.findElement(By.className('no-wrap'));\nassert.ok(importRepoBtn.isDisplayed());",
              "err": {
                "message": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"*[name=\"login\"]\"}\n  (Session info: chrome=109.0.5414.87)",
                "estack": "NoSuchElementError: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"*[name=\"login\"]\"}\n  (Session info: chrome=109.0.5414.87)\n    at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:524:15)\n    at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:587:13)\n    at Executor.execute (node_modules/selenium-webdriver/lib/http.js:515:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Driver.execute (node_modules/selenium-webdriver/lib/webdriver.js:741:17)\n    at async toWireValue (node_modules/selenium-webdriver/lib/webdriver.js:143:15)\n    at async /Users/felippepaiva/Documents/selenium/node_modules/selenium-webdriver/lib/webdriver.js:193:16\n    at async forEachKey (node_modules/selenium-webdriver/lib/webdriver.js:187:9)\n    at async convertKeys (node_modules/selenium-webdriver/lib/webdriver.js:192:3)\n    at async Driver.execute (node_modules/selenium-webdriver/lib/webdriver.js:739:22)",
                "diff": null
              },
              "uuid": "5091dc71-0721-4423-af2a-45a3121dcab0",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8e227e26-c8fa-4380-8731-6d3dee210d3d"
          ],
          "failures": [
            "606ba87c-d73d-4d83-a500-643c7fe808c0",
            "5091dc71-0721-4423-af2a-45a3121dcab0"
          ],
          "pending": [],
          "skipped": [],
          "duration": 182,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "b177393c-cf5d-4548-b424-af3bc07d2104",
          "title": "check search functionability",
          "fullFile": "/Users/felippepaiva/Documents/selenium/test/googleTest.js",
          "file": "/test/googleTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "runs a basic search",
              "fullTitle": "check search functionability runs a basic search",
              "timedOut": null,
              "duration": 6982,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let driver = await new Builder().forBrowser('chrome').build();\nawait driver.get('https://www.google.com/');\nawait driver\n  .findElement(By.name('q'))\n  .sendKeys('Felippe Paiva', Key.RETURN);\nawait driver.quit();",
              "err": {},
              "uuid": "4e35bbb5-c4a8-4304-bcd1-f664b1f70586",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4e35bbb5-c4a8-4304-bcd1-f664b1f70586"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6982,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "40c9180f-e5d6-458b-8f0f-58dfdc80a804",
          "title": "add another todo tests",
          "fullFile": "/Users/felippepaiva/Documents/selenium/test/thirdTest.js",
          "file": "/test/thirdTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "add another todo to the application",
              "fullTitle": "add another todo tests add another todo to the application",
              "timedOut": null,
              "duration": 4762,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// launch the browser\nlet driver = await new Builder().forBrowser('chrome').build();\n// navigate to app\nawait driver.get('https://lambdatest.github.io/sample-todo-app/');\n// add todo to the list\nawait driver\n  .findElement(By.id('sampletodotext'))\n  .sendKeys('Learn Selenium', Key.RETURN);\n// assert\n// xpath -> finding the list of \"li\", and retrieve the last one as \"Learn Selenium\" was added last.\nlet todoText = await driver\n  .findElement(By.xpath('//li[last()]'))\n  .getText()\n  .then(function (value) {\n    return value;\n  });\n// assert using chai should\ntodoText.should.equal('Learn Selenium');\n// close the borwser\nawait driver.quit();",
              "err": {},
              "uuid": "aa44ab47-a1c2-4170-a78f-b114e2d0229f",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "add another todo to the application",
              "fullTitle": "add another todo tests add another todo to the application",
              "timedOut": null,
              "duration": 2391,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// launch the browser\nlet driver = await new Builder().forBrowser('chrome').build();\n// navigate to app\nawait driver.get('https://lambdatest.github.io/sample-todo-app/');\n// add todo to the list\nawait driver\n  .findElement(By.id('sampletodotext'))\n  .sendKeys('Post test report on LinkedIn.', Key.RETURN);\n// assert\nlet todoText = await driver\n  .findElement(By.xpath('//li[last()]'))\n  .getText()\n  .then(function (value) {\n    return value;\n  });\n// assert using chai should\ntodoText.should.equal('Post test report on LinkedIn.');\n// close the borwser\nawait driver.quit();",
              "err": {},
              "uuid": "83c28b8c-b683-4730-8be7-a665da0410cf",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "aa44ab47-a1c2-4170-a78f-b114e2d0229f",
            "83c28b8c-b683-4730-8be7-a665da0410cf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7153,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.1.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "testResults",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "/Users/felippepaiva/Documents/selenium/testReports",
        "reportFilename": "testResults"
      },
      "version": "6.2.0"
    }
  }
}