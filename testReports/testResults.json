{
  "stats": {
    "suites": 2,
    "tests": 3,
    "passes": 2,
    "pending": 0,
    "failures": 1,
    "start": "2022-11-16T18:40:44.376Z",
    "end": "2022-11-16T18:40:50.112Z",
    "duration": 5736,
    "testsRegistered": 3,
    "passPercent": 66.66666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "26a52630-8123-449d-8553-f13a36ffa6a0",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ea6b2b39-744d-417f-a337-4c3b2ccd31e0",
          "title": "add todo tests",
          "fullFile": "/Users/felippepaiva/Documents/selenium/test/secondTest.js",
          "file": "/test/secondTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "add a todo to the application",
              "fullTitle": "add todo tests add a todo to the application",
              "timedOut": null,
              "duration": 3127,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// launch the browser\nlet driver = await new Builder().forBrowser(\"chrome\").build();\n// navigate to app\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n// add todo to the list\nawait driver\n  .findElement(By.id(\"sampletodotext\"))\n  .sendKeys(\"Learn Selenium\", Key.RETURN);\n// assert\n// xpath -> finding the list of \"li\", and retrieve the last one as \"Learn Selenium\" was added last.\nlet todoText = await driver\n  .findElement(By.xpath(\"//li[last()]\"))\n  .getText()\n  .then(function (value) {\n    return value;\n  });\n// assert using chai should\ntodoText.should.equal(\"Learn Selenium\");\n// close the borwser\nawait driver.quit();",
              "err": {},
              "uuid": "f54943b1-3719-4c41-b020-fd04890a6af4",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f54943b1-3719-4c41-b020-fd04890a6af4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3127,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "7400105d-7693-4731-9a36-a61189a6857f",
          "title": "add another todo tests",
          "fullFile": "/Users/felippepaiva/Documents/selenium/test/thirdTest.js",
          "file": "/test/thirdTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "add another todo to the application",
              "fullTitle": "add another todo tests add another todo to the application",
              "timedOut": null,
              "duration": 3452,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// launch the browser\nlet driver = await new Builder().forBrowser(\"chrome\").build();\n// navigate to app\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n// add todo to the list\nawait driver\n  .findElement(By.id(\"sampletodotext\"))\n  .sendKeys(\"Learn Selenium\", Key.RETURN);\n// assert\n// xpath -> finding the list of \"li\", and retrieve the last one as \"Learn Selenium\" was added last.\nlet todoText = await driver\n  .findElement(By.xpath(\"//li[last()]\"))\n  .getText()\n  .then(function (value) {\n    return value;\n  });\n// assert using chai should\ntodoText.should.equal(\"Learn Selenium\");\n// close the borwser\nawait driver.quit();",
              "err": {},
              "uuid": "afc91e8b-5dee-4c9e-9ad4-0f4f0e44b97a",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "add another todo to the application",
              "fullTitle": "add another todo tests add another todo to the application",
              "timedOut": null,
              "duration": 2031,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// launch the browser\nlet driver = await new Builder().forBrowser(\"chrome\").build();\n// navigate to app\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n// add todo to the list\nawait driver\n  .findElement(By.id(\"sampletodotext\"))\n  .sendKeys(\"Learn Selenium\", Key.RETURN);\n// assert\nlet todoText = await driver\n  .findElement(By.xpath(\"//li[last()]\"))\n  .getText()\n  .then(function (value) {\n    return value;\n  });\n// assert using chai should\ntodoText.should.equal(\"Post test report on LinkedIn.\");\n// close the borwser\nawait driver.quit();",
              "err": {
                "message": "AssertionError: expected 'Learn Selenium' to equal 'Post test report on LinkedIn.'",
                "estack": "AssertionError: expected 'Learn Selenium' to equal 'Post test report on LinkedIn.'\n    at Context.<anonymous> (test/thirdTest.js:55:21)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- Learn Selenium\n+ Post test report on LinkedIn.\n"
              },
              "uuid": "70bb3331-82da-4b88-9975-927e8ef59bec",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "afc91e8b-5dee-4c9e-9ad4-0f4f0e44b97a"
          ],
          "failures": [
            "70bb3331-82da-4b88-9975-927e8ef59bec"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5483,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.1.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "testResults",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "/Users/felippepaiva/Documents/selenium/testReports",
        "reportFilename": "testResults"
      },
      "version": "6.2.0"
    }
  }
}