{
  "stats": {
    "suites": 3,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2023-01-24T22:12:23.741Z",
    "end": "2023-01-24T22:12:30.982Z",
    "duration": 7241,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "fcf83bfc-c484-4dbb-a6c8-64f6e053750a",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6628026c-8f78-4c0a-b4f9-4078a9fa34bb",
          "title": "add todo tests",
          "fullFile": "/Users/felippepaiva/Documents/selenium/test/secondTest.js",
          "file": "/test/secondTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "add a todo to the application",
              "fullTitle": "add todo tests add a todo to the application",
              "timedOut": null,
              "duration": 3304,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// launch the browser\nlet driver = await new Builder().forBrowser(\"chrome\").build();\n// navigate to app\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\");\n// add todo to the list\nawait driver\n  .findElement(By.id(\"sampletodotext\"))\n  .sendKeys(\"Learn Selenium\", Key.RETURN);\n// assert\n// xpath -> finding the list of \"li\", and retrieve the last one as \"Learn Selenium\" was added last.\nlet todoText = await driver\n  .findElement(By.xpath(\"//li[last()]\"))\n  .getText()\n  .then(function (value) {\n    return value;\n  });\n// assert using chai should\ntodoText.should.equal(\"Learn Selenium\");\n// close the borwser\nawait driver.quit();",
              "err": {},
              "uuid": "ebe8000a-f50a-4fcd-ad80-ba7ccabc9aa4",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ebe8000a-f50a-4fcd-ad80-ba7ccabc9aa4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3304,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "706868aa-0f9d-4a4f-93d9-05613610ebfc",
          "title": "add another todo tests",
          "fullFile": "/Users/felippepaiva/Documents/selenium/test/thirdTest.js",
          "file": "/test/thirdTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "add another todo to the application",
              "fullTitle": "add another todo tests add another todo to the application",
              "timedOut": null,
              "duration": 3748,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// launch the browser\nlet driver = await new Builder().forBrowser('chrome').build();\n// navigate to app\nawait driver.get('https://lambdatest.github.io/sample-todo-app/');\n// add todo to the list\nawait driver\n  .findElement(By.id('sampletodotext'))\n  .sendKeys('Learn Selenium', Key.RETURN);\n// assert\n// xpath -> finding the list of \"li\", and retrieve the last one as \"Learn Selenium\" was added last.\nlet todoText = await driver\n  .findElement(By.xpath('//li[last()]'))\n  .getText()\n  .then(function (value) {\n    return value;\n  });\n// assert using chai should\ntodoText.should.equal('Learn Selenium');\n// close the borwser\nawait driver.quit();",
              "err": {},
              "uuid": "2fe5df14-d562-4384-a138-cb68ec0f0ae1",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "add another todo to the application",
              "fullTitle": "add another todo tests add another todo to the application",
              "timedOut": null,
              "duration": 2145,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// launch the browser\nlet driver = await new Builder().forBrowser('chrome').build();\n// navigate to app\nawait driver.get('https://lambdatest.github.io/sample-todo-app/');\n// add todo to the list\nawait driver\n  .findElement(By.id('sampletodotext'))\n  .sendKeys('Post test report on LinkedIn.', Key.RETURN);\n// assert\nlet todoText = await driver\n  .findElement(By.xpath('//li[last()]'))\n  .getText()\n  .then(function (value) {\n    return value;\n  });\n// assert using chai should\ntodoText.should.equal('Post test report on LinkedIn.');\n// close the borwser\nawait driver.quit();",
              "err": {},
              "uuid": "04bce94b-c9d8-4d68-882d-3793b3e1e768",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2fe5df14-d562-4384-a138-cb68ec0f0ae1",
            "04bce94b-c9d8-4d68-882d-3793b3e1e768"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5893,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "08a01a2a-037f-41b5-bb42-bacabf804a35",
          "title": "check search functionability",
          "fullFile": "/Users/felippepaiva/Documents/selenium/test/googleTest.js",
          "file": "/test/googleTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "runs a basic search",
              "fullTitle": "check search functionability runs a basic search",
              "timedOut": null,
              "duration": 7005,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let driver = await new Builder().forBrowser('chrome').build();\nawait driver.get('https://www.google.com/');\nawait driver\n  .findElement(By.name('q'))\n  .sendKeys('https://fepaiva.com/', Key.RETURN);\nawait driver.quit();",
              "err": {},
              "uuid": "96f67661-318f-4794-b26b-b5e251425181",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "96f67661-318f-4794-b26b-b5e251425181"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7005,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.1.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "testResults",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "/Users/felippepaiva/Documents/selenium/testReports",
        "reportFilename": "testResults"
      },
      "version": "6.2.0"
    }
  }
}